建立一个git库：
	第一步，创建一个文件夹，进入；
	第二步，用“git init”命令将这个目录变成Git可以管理的仓库，此时目录下多了个.get的目录，如果看不见就是隐藏了，利用命令“ls -ah”

讲一个文件放到仓库：
	第一步，“git add 文件名”，这一步可以添加多次；
	第二步，“get commit -m 文件改动描述”；

git的回退：
	1.首先“git status”查看结果，发现说是有修改，但没有提交；
	2.然后我们想知道修改了什么，怎么修改的“git diff”，可以看到修改了什么；
	3.“git log”可以显示从最近到最远的提交日志，如果显示信息多，有点杂乱，可以加上参数“--pretty=oneline”；
	4.“git reset HEAD^”上个版本，当前版本是HEAD,上个版本是HEAD^,上上个版本就是HEAD^^,上100个版本就是HEAD~100.回退以后想回到新版本怎么办，只要你的窗口没有关，找到版本id，“git reset --hard 版本id”就行啦；
	5.如果关了窗口，只要“git reflog”，可以查看你的每一次git命令，同样找到版本号，回退就行行啦！
	6.“git add”就是把文件提交到暂存区，“git commit”再提交到分支master（这时git为我们默认创建的一个分支）；
	7.git管理的是修改，而不是文件，也就是说只有我们提交到暂存区的修改文件才能被提交，“git diff HEAD -- readme.txt”命令可以查看工作区和版本库里面最新版本的区别：
	8.那我们要撤销修改呢，“git checkout -- 文件名”，这里会有两种情况，一是没有放到暂存区，此时会回到和版本库一样，二是在暂存区后又修改了，此时就回到暂存区的状态；
	9.那如何撤销暂存区的文件呢，“git reset HEAD 文件名”，这样就可以重新放回工作区；
	10.删除文件“rm 文件名”，查询状态，此时有两个选择，一是“git rm 文件名”，然后提交彻底删除，另一个是“git checkout -- 文件名”回复删除；

远程仓库：
	1.注册github，创建ssh key，打开git-bash，ssh-keygen -t rsa -C "youremail@example.com"，一路回车。如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。
	2.登陆GitHub，打开“Account settings”，“SSH Keys”页面，然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容；
	3.添加远程库，进入github，创建新的工程，填写name，创建，然后根据给出的代码在git-bash上操作；
	4.添加后，只要你在本地做了提交，就可以通过命令“git push origin master”来讲本地分支推送到github上了。关联远程库“git remote add origin https://github.com/rotate720deg/learngit.git”，关联后推送本地分支“git push -u origin master”
	5.上面的是先有本地库，再有远程库，那么反过来呢：首先，登陆GitHub，创建一个新的仓库，名字叫gitskills：现在，远程库已经准备好了，下一步是用命令git clone克隆一个本地库：“ git clone git@github.com:michaelliao/gitskills.git”

分支管理：
	1.git中的流程是HEAD--->master--->提交，当我们创建一个分支dev（“git checkout -b dev”这条命令相当于“git branch dev”和“git checkout dev”两条，即创建并切换），并将HEAD指向dev时，操作就回到dev这个分支上，master不变（“git branch”命令会列出所有分支，当前分支前面会标一个*号）；当我们合并时，只要将master指向dev的当前提交就完成了合并；